<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/p http://www.springframework.org/schema/util/spring-p-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd ">

	<context:component-scan base-package="com.es" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<aop:aspectj-autoproxy />
	<aop:config proxy-target-class="true" />
	<mvc:view-controller path="" view-name="redirect:/index" />
	<mvc:view-controller path="/" view-name="redirect:/index" />

	<util:list id="propertiesResources" list-class="java.util.ArrayList">
		<value>classpath:jdbc.properties</value>
	</util:list>

	<!-- <bean id="propertyConfigurer" class="com.es.common.encrypt.SysPropertiesConfig"> 
		<property name="locations" ref="propertiesResources"/> </bean> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" ref="propertiesResources" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="name" value="${jdbc.name}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.pwd}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="minIdle" value="5" />
		<property name="maxWait" value="180000" />
		<property name="useUnfairLock" value="true" />
		<property name="poolPreparedStatements" value="false" />
		<property name="maxOpenPreparedStatements" value="-1" />
		<property name="validationQuery" value="select * from dual" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="minEvictableIdleTimeMillis" value="600000" />
		<property name="connectionInitSqls" value="select * from dual" />
		<!-- 
		<property name="filters" value="filter:log4j" />
		<property name="proxyFilters" value="" />
		 -->
	</bean>
	<!-- proxyFilters: List<com.alibaba.druid.filter.Filter> -->

	<!-- 工厂类实现 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<array>
				<value>classpath*:com/es/**/dao/*DAO.xml</value>
				<value>classpath*:com/es/**/**/dao/*DAO.xml</value>
				<value>classpath*:com/es/**/**/**/dao/*DAO.xml</value>
			</array>
		</property>
	</bean>

	<!-- 扫描dao层，并绑定 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.es.*.dao;com.es.*.*.dao;com.es.*.*.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="upload*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="search*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Throwable" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor pointcut="execution(* com.es.*.*.service.*.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.es.*.*.*.service.*.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.es.*.*.*.*.service.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"></property>
		<property name="shared" value="true"></property>
	</bean>

</beans>